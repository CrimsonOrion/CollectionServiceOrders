<mah:MetroWindow
    x:Class="CollectionServiceOrders.UI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:prism="http://prismlibrary.com/"
    Title="{Binding Title}"
    Dialog:DialogParticipation.Register="{Binding}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    WindowButtonCommandsOverlayBehavior="Never"
    WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="MenuGlyphItemTemplate" DataType="{x:Type mah:HamburgerMenuGlyphItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="Segoe MDL2 Assets"
                        FontSize="16"
                        Foreground="White"
                        Text="{Binding Glyph}"
                        ToolTip="{Binding Label}" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Foreground="White"
                        Text="{Binding Label}" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="MenuIconItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        ToolTip="{Binding Label}" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Foreground="White"
                        Text="{Binding Label}" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="HamburgerMenuHeaderTemplate">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="20"
                    Foreground="White"
                    Text="Navigation" />
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Command="{Binding ShowSettingsCommand}">
                <iconPacks:PackIconTypicons
                    Width="22"
                    Height="22"
                    Kind="CogOutline" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <!--  Flyouts  -->
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <!--  Settings  -->
            <mah:Flyout
                x:Name="SettingsFlyout"
                AnimateOnPositionChange="True"
                BorderBrush="Gray"
                BorderThickness="1"
                CloseButtonVisibility="Visible"
                Header="Settings"
                IsOpen="{Binding IsSettingsFlyoutOpen}"
                Position="Right"
                Theme="Adapt">
                <ScrollViewer VerticalScrollBarVisibility="Visible">
                    <Grid Width="425" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <StackPanel
                            x:Name="SettingsPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Orientation="Vertical">
                            <StackPanel x:Name="SaveRevertSettings" Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style
                                        x:Key="AccentCircleButtonStyle"
                                        BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                                        TargetType="{x:Type ButtonBase}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Resources>
                                <!--  Save Button  -->
                                <Button
                                    x:Name="SaveCircle"
                                    Width="48"
                                    Height="48"
                                    Margin="5,0,5,10"
                                    Command="{Binding SaveSettingsCommand}"
                                    Style="{StaticResource AccentCircleButtonStyle}"
                                    ToolTip="Save Settings"
                                    ToolTipService.InitialShowDelay="1">
                                    <iconPacks:PackIconUnicons
                                        Width="20"
                                        Height="20"
                                        Kind="Save" />
                                </Button>
                                <!--  Revert Button  -->
                                <Button
                                    x:Name="RevertCircle"
                                    Width="48"
                                    Height="48"
                                    Margin="5,0,5,10"
                                    Command="{Binding CancelSettingsCommand}"
                                    Style="{StaticResource AccentCircleButtonStyle}"
                                    ToolTip="Revert Settings"
                                    ToolTipService.InitialShowDelay="1">
                                    <iconPacks:PackIconUnicons
                                        Width="20"
                                        Height="20"
                                        Kind="HistoryAlt" />
                                </Button>
                                <TextBlock
                                    Width="280"
                                    Margin="5,0,5,10"
                                    VerticalAlignment="Bottom"
                                    FontStyle="Italic"
                                    Text="Note: If you close the settings panel without saving, your settings will revert next time you open the application."
                                    TextWrapping="Wrap" />
                            </StackPanel>
                            <GroupBox
                                x:Name="ThemeBox"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                Header="Theme">
                                <StackPanel x:Name="ThemeSettings" Orientation="Vertical">
                                    <StackPanel x:Name="Themes" Orientation="Horizontal">
                                        <StackPanel
                                            x:Name="BaseTheme"
                                            Margin="0,0,25,0"
                                            Orientation="Vertical">
                                            <Label
                                                Margin="0,0,5,0"
                                                VerticalAlignment="Center"
                                                Content="Select Theme:" />
                                            <ComboBox
                                                Name="SelectThemeComboBox"
                                                Margin="5,0,5,5"
                                                IsEnabled="{Binding IsThemeComboBoxEnabled}"
                                                ItemsSource="{Binding AppThemes}"
                                                SelectedItem="{Binding SelectedAppTheme, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Ellipse
                                                                Width="16"
                                                                Height="16"
                                                                Fill="{Binding ColorBrush, Mode=OneWay}"
                                                                Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                                                                StrokeThickness="1" />
                                                            <TextBlock Margin="5,0,0,0" Text="{Binding Name, Mode=OneWay}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding ChangeThemeCommand}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </ComboBox>
                                            <CheckBox
                                                Margin="5,0,0,0"
                                                Command="{Binding EnableThemeComboBoxCommand}"
                                                Content="Use System Theme"
                                                IsChecked="{Binding UseCurrentWindowsTheme}" />
                                        </StackPanel>
                                        <StackPanel x:Name="Accents" Orientation="Vertical">
                                            <Label
                                                Margin="0,0,5,0"
                                                VerticalAlignment="Center"
                                                Content="Select Accent:" />
                                            <ComboBox
                                                Name="SelectAccentComboBox"
                                                Margin="0,0,5,5"
                                                IsEnabled="{Binding IsAccentColorComboBoxEnabled}"
                                                ItemsSource="{Binding AccentColors, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedItem="{Binding SelectedAccentColor, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Ellipse
                                                                Width="16"
                                                                Height="16"
                                                                Fill="{Binding ColorBrush, Mode=OneWay}" />
                                                            <TextBlock Margin="5,0,0,0" Text="{Binding Name, Mode=OneWay}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding ChangeAccentCommand}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </ComboBox>
                                            <CheckBox
                                                Command="{Binding EnableAccentColorComboBoxCommand}"
                                                Content="Use System Accent"
                                                IsChecked="{Binding UseCurrentWindowsAccentColor}" />
                                        </StackPanel>
                                    </StackPanel>
                                    <CheckBox
                                        x:Name="DisplayColorCodingCheckBox"
                                        Margin="5,5,0,0"
                                        Content="Display Color Coding in Cutoffs List"
                                        IsChecked="{Binding ShowColorCoding}" />
                                </StackPanel>
                            </GroupBox>
                            <GroupBox
                                x:Name="DisplayBox"
                                Margin="0,5,0,0"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                Header="Display Options">
                                <StackPanel x:Name="DisplayOptions" Orientation="Vertical">
                                    <StackPanel x:Name="DisplayOptionsWithComboBoxes" Orientation="Horizontal">
                                        <StackPanel x:Name="DisplayLabels" Orientation="Vertical">
                                            <Label
                                                Margin="0,0,5,10"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Content="Filter:" />
                                            <Label
                                                Margin="0,0,5,10"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Content="Font Size:" />
                                            <Label
                                                Margin="0,0,5,10"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Content="Sort Column:" />
                                            <Label
                                                Margin="0,0,5,10"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Content="Sort Direction:" />
                                            <StackPanel Margin="0,0,5,10" Orientation="Vertical">
                                                <Label
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Content="Refresh Rate (sec):" />
                                                <Label
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Content="(Min. 60 sec)" />
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel
                                            x:Name="DisplayComboBoxes"
                                            Margin="0,0,25,0"
                                            Orientation="Vertical">
                                            <ComboBox
                                                x:Name="FilterComboBox"
                                                Margin="0,0,5,10"
                                                ItemsSource="{Binding Filters}"
                                                SelectedItem="{Binding SelectedFilter, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="FontSizeComboBox"
                                                Margin="0,0,5,10"
                                                ItemsSource="{Binding FontSizes}"
                                                SelectedItem="{Binding SelectedFontSize, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="SortColumnComboBox"
                                                Margin="0,0,5,10"
                                                ItemsSource="{Binding SortColumns}"
                                                SelectedItem="{Binding SelectedSortColumn, UpdateSourceTrigger=PropertyChanged}" />
                                            <ComboBox
                                                x:Name="SortDirectionComboBox"
                                                Margin="0,0,5,10"
                                                ItemsSource="{Binding SortDirections}"
                                                SelectedItem="{Binding SelectedSortDirection, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBox
                                                x:Name="RefreshIntervalTextBox"
                                                Margin="0,0,5,10"
                                                mah:TextBoxHelper.Watermark="Number larger than 0"
                                                Text="{Binding RefreshInterval, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />
                                        </StackPanel>
                                        <StackPanel x:Name="SortLabels" Orientation="Vertical">
                                            <CheckBox
                                                x:Name="ShowColumnSONumberCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Service Order Number"
                                                IsChecked="{Binding ShowColumnSONumber}" />
                                            <CheckBox
                                                x:Name="ShowColumnSignalNumberCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Signal Number"
                                                IsChecked="{Binding ShowColumnSignalNumber}" />
                                            <CheckBox
                                                x:Name="ShowColumnFSRCheckBox"
                                                Margin="5,0,0,5"
                                                Content="FSR"
                                                IsChecked="{Binding ShowColumnFSR}" />
                                            <CheckBox
                                                x:Name="ShowColumnMeterNumberCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Meter Number"
                                                IsChecked="{Binding ShowColumnMeterNumber}" />
                                            <CheckBox
                                                x:Name="ShowColumnReadingCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Reading"
                                                IsChecked="{Binding ShowColumnReading}" />
                                            <CheckBox
                                                x:Name="ShowColumnRateCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Rate"
                                                IsChecked="{Binding ShowColumnRate}" />
                                            <CheckBox
                                                x:Name="ShowColumnRouteNumberCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Route Number"
                                                IsChecked="{Binding ShowColumnRouteNumber}" />
                                            <CheckBox
                                                x:Name="ShowColumnLocationNumberCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Location Number"
                                                IsChecked="{Binding ShowColumnLocationNumber}" />
                                            <CheckBox
                                                x:Name="ShowColumnAddressCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Address"
                                                IsChecked="{Binding ShowColumnAddress}" />
                                            <CheckBox
                                                x:Name="ShowColumnAccountNumberCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Account Number"
                                                IsChecked="{Binding ShowColumnAccountNumber}" />
                                            <CheckBox
                                                x:Name="ShowColumnExistingDepositCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Existing Deposit"
                                                IsChecked="{Binding ShowColumnExistingDeposit}" />
                                            <CheckBox
                                                x:Name="ShowColumnAdditionalDepositCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Additional Deposit"
                                                IsChecked="{Binding ShowColumnAdditionalDeposit}" />
                                            <CheckBox
                                                x:Name="ShowColumnAddedChargesCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Added Charges"
                                                IsChecked="{Binding ShowColumnAddedCharges}" />
                                            <CheckBox
                                                x:Name="ShowColumnSignalChangeCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Signal Change"
                                                IsChecked="{Binding ShowColumnSignalChange}" />
                                            <CheckBox
                                                x:Name="ShowColumnLetterPrintedCheckBox"
                                                Margin="5,0,0,5"
                                                Content="Letter Printed"
                                                IsChecked="{Binding ShowColumnLetterPrinted}" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox
                                x:Name="ColorCodingBox"
                                Margin="0,5,0,0"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                Header="Color Coding Colors">
                                <StackPanel Orientation="Vertical">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <!--  Description  -->
                                            <ColumnDefinition Width="Auto" />
                                            <!--  Color  -->
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <!--  Key Account  -->
                                            <RowDefinition />
                                            <!--  Completed  -->
                                            <RowDefinition />
                                            <!--  Good Signal  -->
                                            <RowDefinition />
                                            <!--  Payment Received  -->
                                            <RowDefinition />
                                            <!--  Online Payment  -->
                                            <RowDefinition />
                                            <!--  Bank Draft  -->
                                            <RowDefinition />
                                        </Grid.RowDefinitions>

                                        <!--  Key Account  -->
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="10"
                                            VerticalAlignment="Center"
                                            Foreground="{Binding KeyAccountColor, UpdateSourceTrigger=PropertyChanged}"
                                            Text="Key Account" />
                                        <mah:ColorPicker
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            mah:TextBoxHelper.AutoWatermark="True"
                                            mah:TextBoxHelper.ClearTextButton="True"
                                            mah:TextBoxHelper.UseFloatingWatermark="True"
                                            mah:TextBoxHelper.Watermark="Select a color"
                                            AddToRecentColorsTrigger="ColorPickerClosed"
                                            SelectedColor="{Binding KeyAccountColor, UpdateSourceTrigger=PropertyChanged}" />

                                        <!--  Completed  -->
                                        <TextBlock
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Margin="10"
                                            VerticalAlignment="Center"
                                            Foreground="{Binding CompletedColor, UpdateSourceTrigger=PropertyChanged}"
                                            Text="Completed" />
                                        <mah:ColorPicker
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            mah:TextBoxHelper.AutoWatermark="True"
                                            mah:TextBoxHelper.ClearTextButton="True"
                                            mah:TextBoxHelper.UseFloatingWatermark="True"
                                            mah:TextBoxHelper.Watermark="Select a color"
                                            AddToRecentColorsTrigger="ColorPickerClosed"
                                            SelectedColor="{Binding CompletedColor, UpdateSourceTrigger=PropertyChanged}" />

                                        <!--  Good Signal  -->
                                        <TextBlock
                                            Grid.Row="2"
                                            Grid.Column="0"
                                            Margin="10"
                                            VerticalAlignment="Center"
                                            Foreground="{Binding GoodSignalColor, UpdateSourceTrigger=PropertyChanged}"
                                            Text="Good Signal" />
                                        <mah:ColorPicker
                                            Grid.Row="2"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            mah:TextBoxHelper.AutoWatermark="True"
                                            mah:TextBoxHelper.ClearTextButton="True"
                                            mah:TextBoxHelper.UseFloatingWatermark="True"
                                            mah:TextBoxHelper.Watermark="Select a color"
                                            AddToRecentColorsTrigger="ColorPickerClosed"
                                            SelectedColor="{Binding GoodSignalColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                        <!--  Payment Received  -->
                                        <TextBlock
                                            Grid.Row="3"
                                            Grid.Column="0"
                                            Margin="10"
                                            VerticalAlignment="Center"
                                            Foreground="{Binding PaymentReceivedColor, UpdateSourceTrigger=PropertyChanged}"
                                            Text="Payment Received" />
                                        <mah:ColorPicker
                                            Grid.Row="3"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            mah:TextBoxHelper.AutoWatermark="True"
                                            mah:TextBoxHelper.ClearTextButton="True"
                                            mah:TextBoxHelper.UseFloatingWatermark="True"
                                            mah:TextBoxHelper.Watermark="Select a color"
                                            AddToRecentColorsTrigger="ColorPickerClosed"
                                            SelectedColor="{Binding PaymentReceivedColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                        <!--  Online Payment  -->
                                        <TextBlock
                                            Grid.Row="4"
                                            Grid.Column="0"
                                            Margin="10"
                                            VerticalAlignment="Center"
                                            Foreground="{Binding OnlinePaymentColor, UpdateSourceTrigger=PropertyChanged}"
                                            Text="Online Payment" />
                                        <mah:ColorPicker
                                            Grid.Row="4"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            mah:TextBoxHelper.AutoWatermark="True"
                                            mah:TextBoxHelper.ClearTextButton="True"
                                            mah:TextBoxHelper.UseFloatingWatermark="True"
                                            mah:TextBoxHelper.Watermark="Select a color"
                                            AddToRecentColorsTrigger="ColorPickerClosed"
                                            SelectedColor="{Binding OnlinePaymentColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                        <!--  Bank Draft  -->
                                        <TextBlock
                                            Grid.Row="5"
                                            Grid.Column="0"
                                            Margin="10"
                                            VerticalAlignment="Center"
                                            Foreground="{Binding BankDraftColor, UpdateSourceTrigger=PropertyChanged}"
                                            Text="Bank Draft" />
                                        <mah:ColorPicker
                                            Grid.Row="5"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            mah:TextBoxHelper.AutoWatermark="True"
                                            mah:TextBoxHelper.ClearTextButton="True"
                                            mah:TextBoxHelper.UseFloatingWatermark="True"
                                            mah:TextBoxHelper.Watermark="Select a color"
                                            AddToRecentColorsTrigger="ColorPickerClosed"
                                            SelectedColor="{Binding BankDraftColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </Grid>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>

    <Grid>
        <ContentControl Margin="55,5,5,5" prism:RegionManager.RegionName="MainRegion" />
        <mah:HamburgerMenu
            x:Name="NaviationMenu"
            DisplayMode="CompactOverlay"
            HamburgerMenuHeaderTemplate="{StaticResource HamburgerMenuHeaderTemplate}"
            IsPaneOpen="False"
            ItemTemplate="{StaticResource MenuIconItemTemplate}"
            OptionsItemTemplate="{StaticResource MenuIconItemTemplate}"
            VerticalScrollBarOnLeftSide="False">
            <mah:HamburgerMenu.ItemsSource>
                <mah:HamburgerMenuItemCollection>
                    <mah:HamburgerMenuIconItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.CutoffsScreenCommand}" Label="Cutoffs View">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconForkAwesome
                                Width="20"
                                Height="20"
                                Kind="Table" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.SearchForCutoffScreenCommand}" Label="Search for Cutoff">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconFontAwesome
                                Width="20"
                                Height="20"
                                Kind="SearchenginBrands" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.AddNewCutoffScreenCommand}" Label="Add New Cutoff">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconForkAwesome
                                Width="20"
                                Height="20"
                                Kind="PlusSquareOutline" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.AdditionalDepositsScreenCommand}" Label="Additional Deposit Letters">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconVaadinIcons
                                Width="20"
                                Height="20"
                                Kind="EnvelopeOutlinepenOutline" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.AdhocReportScreenCommand}" Label="Adhoc Report">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconMaterial
                                Width="20"
                                Height="20"
                                Kind="MicrosoftExcel" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.ImportDataFromDaffronScreenCommand}" Label="Import Data from Daffron">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconPicolIcons
                                Width="20"
                                Height="20"
                                Kind="DownloadInformation" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem
                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.AdministrationScreenCommand}"
                        IsVisible="{Binding HasAdminRights}"
                        Label="User Administration">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconFontAwesome
                                Width="20"
                                Height="20"
                                Kind="UserShieldSolid" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                </mah:HamburgerMenuItemCollection>
            </mah:HamburgerMenu.ItemsSource>

            <!--  About Page  -->
            <mah:HamburgerMenu.OptionsItemsSource>
                <mah:HamburgerMenuItemCollection>
                    <mah:HamburgerMenuIconItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.AboutScreenCommand}" Label="About">
                        <mah:HamburgerMenuIconItem.Icon>
                            <iconPacks:PackIconMaterial
                                Width="20"
                                Height="20"
                                Kind="Help" />
                        </mah:HamburgerMenuIconItem.Icon>
                    </mah:HamburgerMenuIconItem>
                </mah:HamburgerMenuItemCollection>
            </mah:HamburgerMenu.OptionsItemsSource>
        </mah:HamburgerMenu>
    </Grid>
</mah:MetroWindow>